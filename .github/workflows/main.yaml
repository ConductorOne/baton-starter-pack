name: main ci
on:
  push:
    branches:
      - main
jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Do not run scaffolding on template repository
        shell: bash
        # This workflow runs when the `cookiecutter.json` file is modified.
        # This is the trick to re-init a repository, but we don't want to
        # run this action if this file is modified in the origin template repository.
        #
        # Using the GitHub rest API allows us to identify if the current repository
        # is a template repository or not.
        run: |
          curl --silent -X GET \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.baptiste-preview+json" \
            https://api.github.com/repos/$GITHUB_REPOSITORY \
            | jq --exit-status '.is_template == false';
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=3m
  go-test:
    strategy:
      matrix:
        go-version: [ 1.20.x ]
        platform: [ ubuntu-latest ]
    runs-on: ${{ '{{ matrix.platform }}' }}
    steps:
      - name: Do not run scaffolding on template repository
        shell: bash
        # This workflow runs when the `cookiecutter.json` file is modified.
        # This is the trick to re-init a repository, but we don't want to
        # run this action if this file is modified in the origin template repository.
        #
        # Using the GitHub rest API allows us to identify if the current repository
        # is a template repository or not.
        run: |
          curl --silent -X GET \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.baptiste-preview+json" \
            https://api.github.com/repos/$GITHUB_REPOSITORY \
            | jq --exit-status '.is_template == false';
      - name: Install Go
        if: success()
        uses: actions/setup-go@v4
        with:
          go-version: ${{ '{{ matrix.go-version }}' }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: go tests
        run: go test -v -covermode=count -json ./... > test.json
      - name: annotate go tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: test.json